
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ОтобразитьСоставнойПараметр();
	ОтобразитьПараметрБулево();
	ЗаполнитьИсходноеЗначение();
	УстановитьВидимостьЭлементовФормы();
	УстановитьОформлениеЭлементаОтображенияЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПереключитьСтраницу();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	Если Не Объект.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.Булево") 
		 И Не Объект.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.Дата")
		 И Не Объект.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.Строка")
		 И Не Объект.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.Ссылка") Тогда
		ТекущийОбъект.Значение = Неопределено;
	КонецЕсли;
	
	Если Объект.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.КлючЗначение") Тогда
		ПередЗаписьюНаСервереСоставнойПараметр(ТекущийОбъект);
	КонецЕсли;
	
	Если Объект.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.Массив") Тогда
		
		ПользовательскиеЗначения = СписокМассив.ВыгрузитьЗначения();
		ТекущийОбъект.Хранилище = Новый ХранилищеЗначения(ПользовательскиеЗначения);
		
	КонецЕсли;

	Если Объект.ТипЗначения <> ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.ТаблицаЗначений")
	И Объект.ТипЗначения <> ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.Массив")
	И Объект.ТипЗначения <> ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.КлючЗначение") Тогда
		ТекущийОбъект.Хранилище = Новый ХранилищеЗначения(Неопределено);
		ТаблицаПараметры.Очистить();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПереключательПараметрПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
	ПереключитьСтраницу();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЗначенияПриИзменении(Элемент)
	//TODO: Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеБулевоПриИзменении(Элемент)

	Объект.Значение = ЗначениеБулево;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПараметры

&НаКлиенте
Процедура ПараметрыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если ЗначениеЗаполнено(Объект.ТипЗначения) Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Параметры.Количество() > 1 Тогда
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(ТипЗнч(Объект.Параметры.Получить(0).Значение));
		Элементы.ПараметрыЗначение.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
		
	Иначе
		Элементы.ПараметрыЗначение.ОграничениеТипа = Новый ОписаниеТипов();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПередЗаписьюМногострочныйПараметр(Отказ)
	
	Для Каждого СтрокаТаблицы Из Объект.Параметры Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Значение) Тогда
			Поле = БазоваяФункциональностьКлиентСервер.ПодставитьПараметрыВСтроку(
				"Параметры[%1].Значение", СтрокаТаблицы.НомерСтроки - 1);
			
			БазоваяФункциональностьКлиентСервер.СообщитьПользователю(
				НСтр("ru='Не заполнен элемент списка'"), Объект.Ссылка, Поле, "Объект", Отказ);
				
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюСоставнойпараметр(Отказ)
	
	Для Каждого СтрокаТаблицы Из ТаблицаПараметры Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Наименование) Тогда
			Поле = БазоваяФункциональностьКлиентСервер.ПодставитьПараметрыВСтроку(
				"ТаблицаПараметры[%1].Наименование", ТаблицаПараметры.Индекс(СтрокаТаблицы));
			
			БазоваяФункциональностьКлиентСервер.СообщитьПользователю(НСтр("ru='Не заполнено наименование параметра'"), , Поле, , Отказ);
			Прервать;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Значение) Тогда
			Поле = БазоваяФункциональностьКлиентСервер.ПодставитьПараметрыВСтроку(
				"ТаблицаПараметры[%1].Значение", ТаблицаПараметры.Индекс(СтрокаТаблицы));
			
			БазоваяФункциональностьКлиентСервер.СообщитьПользователю(НСтр("ru='Не заполнено значение параметра'"), , Поле, , Отказ);
			Прервать;
		КонецЕсли;
		
		Попытка
			СтруктураПроверка = Новый Структура(СтрокаТаблицы.Наименование, СтрокаТаблицы.Значение);
			
		Исключение
			ТекстСообщения = НСтр("ru='Указано недопустимое наименование параметра.
				|Наименование должно соответствовать стандартам наименования переменных.'");
			
			Поле = БазоваяФункциональностьКлиентСервер.ПодставитьПараметрыВСтроку(
				"ТаблицаПараметры[%1].Наименование", ТаблицаПараметры.Индекс(СтрокаТаблицы));
			
			БазоваяФункциональностьКлиентСервер.СообщитьПользователю(ТекстСообщения, , Поле, , Отказ);
			Прервать;
		КонецПопытки;
		
		СтрокиДубли = ТаблицаПараметры.НайтиСтроки(Новый Структура("Наименование", СтрокаТаблицы.Наименование));
		Если СтрокиДубли.Количество() > 1 Тогда
			Поле = БазоваяФункциональностьКлиентСервер.ПодставитьПараметрыВСтроку(
				"ТаблицаПараметры[%1].Наименование", ТаблицаПараметры.Индекс(СтрокаТаблицы));
			БазоваяФункциональностьКлиентСервер.СообщитьПользователю(НСтр("ru='Дублирующееся наименование параметра'"), , Поле, , Отказ);
			Продолжить;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервереСоставнойПараметр(ТекущийОбъект)
	
	Если ТекущийОбъект.ЭтоНовый() Тогда
		СтруктураХранилищаРанее = Новый Структура;
	Иначе
		СтруктураХранилищаРанее = ПредопределенныеНастройки.ЗначениеСлужебнойНастройки(ТекущийОбъект.Ссылка);
	КонецЕсли;
	
	СтруктураХранилища = Новый Структура;
	Для Каждого ЭлементСписка Из ТаблицаПараметры Цикл
		
		ЗначениеРанее = Неопределено;
		
		СтруктураХранилищаРанее.Свойство(ЭлементСписка.Наименование, ЗначениеРанее);
		
		Если ТипЗнч(ЗначениеРанее) = Тип("ТаблицаЗначений") Тогда
			СтруктураХранилища.Вставить(ЭлементСписка.Наименование, ЗначениеРанее);
			
		Иначе
			СтруктураХранилища.Вставить(ЭлементСписка.Наименование, ЭлементСписка.Значение);
		КонецЕсли; 
		
	КонецЦикла;
	
	ТекущийОбъект.Хранилище = Новый ХранилищеЗначения(СтруктураХранилища, Новый СжатиеДанных());
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьСтраницу()
	
	Если Объект.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.Булево") Тогда
		НоваяСтраница = Элементы.СтраницаЗначениеБулево;
		
	ИначеЕсли Объект.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.Строка") Тогда
		НоваяСтраница = Элементы.СтраницаСтрока;
		
	ИначеЕсли Объект.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.Ссылка") Тогда
		НоваяСтраница = Элементы.СтраницаПараметр;
		
	ИначеЕсли Объект.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.Массив") Тогда
		НоваяСтраница = Элементы.СтраницаМассив;
		
	ИначеЕсли Объект.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.КлючЗначение") Тогда
		НоваяСтраница = Элементы.СтраницаСоставной;
		
	ИначеЕсли Объект.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.Дата") Тогда
		НоваяСтраница = Элементы.СтраницаПараметр;
		
	ИначеЕсли Объект.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.ТаблицаЗначений") Тогда
		НоваяСтраница = Элементы.СтраницаСоставной;

	Иначе
		НоваяСтраница = Элементы.СтраницаПараметр;
	КонецЕсли;
	
	
	Если Объект.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.Булево") Тогда
		// Ничего не надо
	ИначеЕсли Объект.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.Строка") Тогда
		
		ДоступныеТипы = Новый Массив;
		ДоступныеТипы.Добавить("Строка");
		Элементы.ЗначениеСтрока.ОграничениеТипа = Новый ОписаниеТипов(ДоступныеТипы);
		
	ИначеЕсли Объект.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.Ссылка") Тогда
		
		//Элементы.Значение.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПредопределенныеНастройки");
	
	КонецЕсли;
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница <> НоваяСтраница Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = НоваяСтраница;
	КонецЕсли;
	
	Для Каждого Элемент Из Элементы.ГруппаСтраницы.ПодчиненныеЭлементы Цикл
		Если Элемент = НоваяСтраница Тогда
			Элемент.Видимость = Истина;
		Иначе
			Элемент.Видимость = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьСоставнойПараметр()
	
	ОбъектОбъект = РеквизитФормыВЗначение("Объект");
	ЗначениеХранилища = ОбъектОбъект.Хранилище.Получить();
	
	Если Объект.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.ТаблицаЗначений") Тогда

		
		ЭтоТаблицаЗначений = Истина;
		ОтобразитьТаблицуЗначения(ЗначениеХранилища);
		
	ИначеЕсли Объект.ТипЗначения = ПредопределенноеЗначение("Перечисление.ТипыЗначенияПредопределенныхЗначений.КлючЗначение") Тогда
		
		ОтобразитьТаблицуЗначения(ЗначениеХранилища);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьСоответствие(ЗначениеХранилища)
	
	Если ЗначениеХранилища <> Неопределено Тогда
		Для Каждого КлючИЗначение Из ЗначениеХранилища Цикл
			СтрокаПараметр = ТаблицаПараметры.Добавить();
			СтрокаПараметр.Наименование = КлючИЗначение.Ключ;
			СтрокаПараметр.Значение = КлючИЗначение.Значение;
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ОтобразитьТаблицуЗначения(ЗначениеХранилища)
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ТаблицаНастройки", Новый ОписаниеТипов("ТаблицаЗначений")));
	
	Для Каждого Колонка Из ЗначениеХранилища.Колонки Цикл
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "ТаблицаНастройки", Колонка.Заголовок));
	КонецЦикла;
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты, Новый Массив);
	
	Элементы.ТаблицаПараметры.Видимость = Ложь;
	
	ТаблицаФормы = Элементы.Добавить("ТаблицаНастройки", Тип("ТаблицаФормы"), Элементы.СтраницаСоставной);
	ТаблицаФормы.ПутьКДанным = "ТаблицаНастройки";
	
	Для Каждого Колонка Из ЗначениеХранилища.Колонки Цикл
		ПолеВвода = Элементы.Добавить("ТаблицаНастройки" + Колонка.Имя, Тип("ПолеФормы"), Элементы.ТаблицаНастройки);
		ПолеВвода.Вид		  = ВидПоляФормы.ПолеВвода;
		ПолеВвода.ПутьКДанным = "ТаблицаНастройки." + Колонка.Имя;

	КонецЦикла;
	
	Для Каждого СтрокаХранилища Из ЗначениеХранилища Цикл
		ЗаполнитьЗначенияСвойств(ЭтотОбъект.ТаблицаНастройки.Добавить(), СтрокаХранилища);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьПараметрБулево()
	
	Если ТипЗнч(Объект.Значение) = Тип("Булево") Тогда
		Элементы.ЗначениеБулево.Заголовок = Объект.Наименование;
		ЗначениеБулево = Объект.Значение
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОформлениеЭлементаОтображенияЗначения()
	
	Если Объект.ТипЗначения = Перечисления.ТипыЗначенияПредопределенныхЗначений.Массив Тогда
		
		ХранилищеЗначений = РеквизитФормыВЗначение("Объект").Хранилище;
		МассивЗначений = ХранилищеЗначений.Получить();
		Если ТипЗнч(МассивЗначений) = Тип("Массив") Тогда
			Для Каждого Элемент Из МассивЗначений Цикл
				СписокМассив.Добавить(Элемент);
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИсходноеЗначение()
	
	Ссылка = Объект.Ссылка;
	Если Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаОписанияПредопределенныхНастроек = ПредопределенныеНастройки.НоваяТаблицаПредопределенныхНастроек();
	ПредопределенныеНастройки.ИнициализироватьТаблицуПредопределенныхНастроек(ТаблицаОписанияПредопределенныхНастроек);
	
	СтрокаТекущейНастройки = ТаблицаОписанияПредопределенныхНастроек.Найти(Объект.ИмяНастройки, "ИмяНастройки");
	Если СтрокаТекущейНастройки = Неопределено Тогда
		Возврат;
	Иначе
		ИсходноеЗначение = СтрокаТекущейНастройки.Значение;
		СозданПрограммно = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементовФормы()
	
	Если СозданПрограммно Тогда
		Элементы.ГруппаПредупреждение.Видимость = Ложь;
		ЗначенияРазличаются = (Объект.Значение <> ИсходноеЗначение);
		Элементы.ГруппаИнформация.Видимость = ЗначенияРазличаются;
	Иначе
		Элементы.ГруппаПредупреждение.Видимость = Истина;
		Элементы.ГруппаИнформация.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
